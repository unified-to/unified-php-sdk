<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Unified\Unified_to\Models\Shared;


class VerificationPackage
{
    /**
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     *
     * @var VerificationPackageType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Unified\Unified_to\Models\Shared\VerificationPackageType')]
    public VerificationPackageType $type;

    /**
     * $aliases
     *
     * @var ?array<string> $aliases
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('aliases')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $aliases = null;

    /**
     * average processing time in minutes
     *
     * @var ?array<VerificationTime> $averageProcessingTimes
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('average_processing_times')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Unified\Unified_to\Models\Shared\VerificationTime>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $averageProcessingTimes = null;

    /**
     *
     * @var ?float $costAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cost_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $costAmount = null;

    /**
     *
     * @var ?\DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $createdAt = null;

    /**
     *
     * @var ?string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $currency = null;

    /**
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     *
     * @var ?bool $hasRedirectUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('has_redirect_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $hasRedirectUrl = null;

    /**
     *
     * @var ?bool $hasTargetUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('has_target_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $hasTargetUrl = null;

    /**
     *
     * @var ?string $infoUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('info_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $infoUrl = null;

    /**
     *
     * @var ?float $maxScore
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('max_score')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $maxScore = null;

    /**
     *
     * @var ?bool $needsIpAddress
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('needs_ip_address')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $needsIpAddress = null;

    /**
     * Questions that need to be answered for this verification
     *
     * @var ?array<VerificationParameter> $parameters
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('parameters')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Unified\Unified_to\Models\Shared\VerificationParameter>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $parameters = null;

    /**
     * $raw
     *
     * @var ?array<string, mixed> $raw
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('raw')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $raw = null;

    /**
     * Category (Verification, Validation, Background Check)
     *
     * @var ?array<string> $tags
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tags')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $tags = null;

    /**
     *
     * @var ?\DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $updatedAt = null;

    /**
     * @param  string  $id
     * @param  string  $name
     * @param  VerificationPackageType  $type
     * @param  ?array<string>  $aliases
     * @param  ?array<VerificationTime>  $averageProcessingTimes
     * @param  ?float  $costAmount
     * @param  ?\DateTime  $createdAt
     * @param  ?string  $currency
     * @param  ?string  $description
     * @param  ?bool  $hasRedirectUrl
     * @param  ?bool  $hasTargetUrl
     * @param  ?string  $infoUrl
     * @param  ?float  $maxScore
     * @param  ?bool  $needsIpAddress
     * @param  ?array<VerificationParameter>  $parameters
     * @param  ?array<string, mixed>  $raw
     * @param  ?array<string>  $tags
     * @param  ?\DateTime  $updatedAt
     * @phpstan-pure
     */
    public function __construct(string $id, string $name, VerificationPackageType $type, ?array $aliases = null, ?array $averageProcessingTimes = null, ?float $costAmount = null, ?\DateTime $createdAt = null, ?string $currency = null, ?string $description = null, ?bool $hasRedirectUrl = null, ?bool $hasTargetUrl = null, ?string $infoUrl = null, ?float $maxScore = null, ?bool $needsIpAddress = null, ?array $parameters = null, ?array $raw = null, ?array $tags = null, ?\DateTime $updatedAt = null)
    {
        $this->id = $id;
        $this->name = $name;
        $this->type = $type;
        $this->aliases = $aliases;
        $this->averageProcessingTimes = $averageProcessingTimes;
        $this->costAmount = $costAmount;
        $this->createdAt = $createdAt;
        $this->currency = $currency;
        $this->description = $description;
        $this->hasRedirectUrl = $hasRedirectUrl;
        $this->hasTargetUrl = $hasTargetUrl;
        $this->infoUrl = $infoUrl;
        $this->maxScore = $maxScore;
        $this->needsIpAddress = $needsIpAddress;
        $this->parameters = $parameters;
        $this->raw = $raw;
        $this->tags = $tags;
        $this->updatedAt = $updatedAt;
    }
}